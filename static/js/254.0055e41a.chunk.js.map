{"version":3,"file":"static/js/254.0055e41a.chunk.js","mappings":"2LAGA,MAAMA,EAAQC,EAAQ,KA2EtB,EAzEsBC,KACpB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,GAEjCG,EAAaC,MAAOC,EAAOC,KAC/BJ,GAAW,GACX,IACE,MAAMK,QAAiBZ,EAAMa,IAC3B,6DAA6DH,UAAcC,KAE7EP,GAAUU,IACR,MAAMC,EAAW,IAAID,GAKrB,OAJAF,EAASI,KAAKC,SAAQ,CAACC,EAAMC,KAE3BJ,EAASL,EAAQS,GAASD,CAAI,IAEzBH,CAAQ,GAEnB,CAAE,MAAOK,GACPC,QAAQD,MAAM,wBAAyBA,EACzC,CAAC,QACCb,GAAW,EACb,IAGFe,EAAAA,EAAAA,YAAU,KACRd,EAAW,EAAG,IAAI,GACjB,IAEH,MAAMe,EAAMC,IAAuB,IAAtB,MAAEL,EAAK,MAAEM,GAAOD,EAC3B,MAAMN,EAAOf,EAAMgB,GACnB,OACEO,EAAAA,EAAAA,KAAA,OACED,MAAOA,EACPE,UAAU,YACVC,KAAK,WACL,aAAYV,EAAO,QAAQA,EAAKW,OAAS,eACzCC,SAAU,EAAGC,SAEZb,EAAOA,EAAKW,KAAO,cAChB,EAIV,OACEG,EAAAA,EAAAA,MAAA,OAAKP,MAAO,CAAEQ,OAAQ,QAASC,MAAO,QAASH,SAAA,EAC7CL,EAAAA,EAAAA,KAACS,EAAAA,GAAS,CAAAJ,SACPK,IAAA,IAAC,OAAEH,EAAM,MAAEC,GAAOE,EAAA,OACjBV,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CACHJ,OAAQA,EACRK,UAAW,IACXC,SAAU,GACVL,MAAOA,EACPM,iBAAiB,KACjBZ,KAAK,OACLa,gBAAiBC,IAA8C,IAA7C,kBAAEC,EAAiB,iBAAEC,GAAkBF,EAClDpC,GACHE,EAAWmC,EAAmBC,EAChC,EACAb,SAEDR,GACI,IAGVjB,IACCoB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAoB,YAAU,SAAQI,SAAC,iBAIpD,C","sources":["VirtualScroll.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { FixedSizeList as List } from \"react-window\";\r\nimport AutoSizer from \"react-virtualized-auto-sizer\";\r\nconst axios = require(\"axios\");\r\n\r\nconst VirtualScroll = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchItems = async (start, stop) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(\r\n        `https://virtual-scroll-app-1.onrender.com/api/items?start=${start}&stop=${stop}`\r\n      );\r\n      setItems((prevItems) => {\r\n        const newItems = [...prevItems];\r\n        response.data.forEach((item, index) => {\r\n          //placing each fetched item into its correct position in the newItems array.\r\n          newItems[start + index] = item;\r\n        });\r\n        return newItems;\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching items:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchItems(0, 100);\r\n  }, []);\r\n\r\n  const Row = ({ index, style }) => {\r\n    const item = items[index];\r\n    return (\r\n      <div\r\n        style={style}\r\n        className=\"list-item\"\r\n        role=\"listitem\"\r\n        aria-label={item ? `Item ${item.name}` : \"Loading item\"}\r\n        tabIndex={0} // Makes the row focusable by keyboard\r\n      >\r\n        {item ? item.name : \"Loading...\"}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", width: \"100%\" }}>\r\n      <AutoSizer>\r\n        {({ height, width }) => (\r\n          <List\r\n            height={height}\r\n            itemCount={10000}\r\n            itemSize={50}\r\n            width={width}\r\n            outerElementType=\"ul\" // Adds semantic meaning as a list\r\n            role=\"list\" // ARIA role indicating this is a list\r\n            onItemsRendered={({ visibleStartIndex, visibleStopIndex }) => {\r\n              if (!loading) {\r\n                fetchItems(visibleStartIndex, visibleStopIndex);\r\n              }\r\n            }}\r\n          >\r\n            {Row}\r\n          </List>\r\n        )}\r\n      </AutoSizer>\r\n      {loading && (\r\n        <div className=\"loading-indicator\" aria-live=\"polite\">\r\n          Loading...\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default VirtualScroll;\r\n"],"names":["axios","require","VirtualScroll","items","setItems","useState","loading","setLoading","fetchItems","async","start","stop","response","get","prevItems","newItems","data","forEach","item","index","error","console","useEffect","Row","_ref","style","_jsx","className","role","name","tabIndex","children","_jsxs","height","width","AutoSizer","_ref2","List","itemCount","itemSize","outerElementType","onItemsRendered","_ref3","visibleStartIndex","visibleStopIndex"],"sourceRoot":""}